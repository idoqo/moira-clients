/**
 * Moira Alert
 * This is an API description for [Moira Alert project](https://moira.readthedocs.io/en/latest/overview.html). Please check <https://github.com/moira-alert/>
 *
 * The version of the OpenAPI document: 2.5.1.48
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from '../api';
import { SubscriptionSched } from './subscriptionSched';

export class Trigger {
    /**
    * ID of the trigger
    */
    'id'?: string;
    /**
    * name of the trigger
    */
    'name': string;
    /**
    * informative description of the trigger
    */
    'desc': string;
    /**
    * graphite metric to cause this trigger
    */
    'targets'?: Array<string>;
    /**
    * value at which Moira should send a WARNING alert
    */
    'warnValue'?: number;
    /**
    * value at which Moira should send an ERROR alert
    */
    'errorValue': number;
    /**
    * Value is either \'rising\' or \'falling\'. Dictates when alerts are sent for `warn_value` and `error_value`
    */
    'triggerType'?: Trigger.TriggerTypeEnum;
    /**
    * the tags associated with this trigger. New tags are automatically created
    */
    'tags'?: Array<string>;
    /**
    * state to put the metric in if Moira doesn\'t receive new data for it from graphite. See <https://moira.readthedocs.io/en/latest/development/architecture.html?highlight=ttl#state/>
    */
    'ttlState': Trigger.TtlStateEnum;
    /**
    * number of seconds to wait for metric update from Graphite before changing the metric state
    */
    'ttl': number;
    'sched'?: SubscriptionSched;
    'expression'?: string;
    /**
    * optional Graphite pattern is a single dot-separated metric name, possibly containing one or more wildcards
    */
    'patterns'?: Array<string>;
    /**
    * dictates if trigger should be added to Graphite instead of Redis. See <https://moira.readthedocs.io/en/latest/installation/configuration.html#remote-triggers-checker/>
    */
    'isRemote'?: boolean;
    /**
    * if true, Moira will notify you each time the metric state changes, e.g NODATA -> OK
    */
    'muteNewMetrics': boolean;
    /**
    * See <https://moira.readthedocs.io/en/latest/user_guide/throttling.html/>
    */
    'throttling'?: number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "desc",
            "baseName": "desc",
            "type": "string"
        },
        {
            "name": "targets",
            "baseName": "targets",
            "type": "Array<string>"
        },
        {
            "name": "warnValue",
            "baseName": "warn_value",
            "type": "number"
        },
        {
            "name": "errorValue",
            "baseName": "error_value",
            "type": "number"
        },
        {
            "name": "triggerType",
            "baseName": "trigger_type",
            "type": "Trigger.TriggerTypeEnum"
        },
        {
            "name": "tags",
            "baseName": "tags",
            "type": "Array<string>"
        },
        {
            "name": "ttlState",
            "baseName": "ttl_state",
            "type": "Trigger.TtlStateEnum"
        },
        {
            "name": "ttl",
            "baseName": "ttl",
            "type": "number"
        },
        {
            "name": "sched",
            "baseName": "sched",
            "type": "SubscriptionSched"
        },
        {
            "name": "expression",
            "baseName": "expression",
            "type": "string"
        },
        {
            "name": "patterns",
            "baseName": "patterns",
            "type": "Array<string>"
        },
        {
            "name": "isRemote",
            "baseName": "is_remote",
            "type": "boolean"
        },
        {
            "name": "muteNewMetrics",
            "baseName": "mute_new_metrics",
            "type": "boolean"
        },
        {
            "name": "throttling",
            "baseName": "throttling",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return Trigger.attributeTypeMap;
    }
}

export namespace Trigger {
    export enum TriggerTypeEnum {
        Rising = <any> 'rising',
        Falling = <any> 'falling'
    }
    export enum TtlStateEnum {
        OK = <any> 'OK',
        WARN = <any> 'WARN',
        ERROR = <any> 'ERROR',
        NODATA = <any> 'NODATA',
        EXCEPTION = <any> 'EXCEPTION'
    }
}
