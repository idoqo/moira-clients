# coding: utf-8

"""
    Moira Alert

    This is an API description for [Moira Alert project](https://moira.readthedocs.io/en/latest/overview.html). Please check <https://github.com/moira-alert/>  # noqa: E501

    The version of the OpenAPI document: 2.5.1.48
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.inline_response2008 import InlineResponse2008  # noqa: E501
from openapi_client.rest import ApiException

class TestInlineResponse2008(unittest.TestCase):
    """InlineResponse2008 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test InlineResponse2008
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.inline_response2008.InlineResponse2008()  # noqa: E501
        if include_optional :
            return InlineResponse2008(
                list = [
                    openapi_client.models.trigger.Trigger(
                        id = '292516ed-4924-4154-a62c-ebe312431fce', 
                        name = 'Not enough disk space left', 
                        desc = 'check the size of /var/log', 
                        targets = ["devOps.my_server.hdd.freespace_mbytes"], 
                        warn_value = 5000, 
                        error_value = 1000, 
                        trigger_type = 'rising', 
                        tags = ["server","disk"], 
                        ttl_state = 'NODATA', 
                        ttl = 600, 
                        sched = openapi_client.models.subscription_sched.Subscription_sched(
                            days = [
                                openapi_client.models.subscription_sched_days.Subscription_sched_days(
                                    enabled = True, 
                                    name = 'Mon', )
                                ], 
                            tz_offset = -60, 
                            start_offset = 0, 
                            end_offset = 1439, ), 
                        expression = '0', 
                        patterns = [""], 
                        is_remote = False, 
                        mute_new_metrics = False, 
                        throttling = 0, )
                    ]
            )
        else :
            return InlineResponse2008(
        )

    def testInlineResponse2008(self):
        """Test InlineResponse2008"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
