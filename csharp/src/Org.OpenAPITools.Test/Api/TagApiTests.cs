/* 
 * Moira Alert
 *
 * This is an API description for [Moira Alert project](https://moira.readthedocs.io/en/latest/overview.html). Please check <https://github.com/moira-alert/>
 *
 * The version of the OpenAPI document: 2.5.1.48
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing TagApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class TagApiTests
    {
        private TagApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new TagApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TagApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' TagApi
            //Assert.IsInstanceOf(typeof(TagApi), instance);
        }

        
        /// <summary>
        /// Test DeleteTag
        /// </summary>
        [Test]
        public void DeleteTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tag = null;
            //instance.DeleteTag(tag);
            
        }
        
        /// <summary>
        /// Test GetTags
        /// </summary>
        [Test]
        public void GetTagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetTags();
            //Assert.IsInstanceOf(typeof(InlineResponse2005), response, "response is InlineResponse2005");
        }
        
        /// <summary>
        /// Test GetTagsSubscriptions
        /// </summary>
        [Test]
        public void GetTagsSubscriptionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetTagsSubscriptions();
            //Assert.IsInstanceOf(typeof(InlineResponse2006), response, "response is InlineResponse2006");
        }
        
    }

}
